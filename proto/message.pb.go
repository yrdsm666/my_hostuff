// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.22.3
// source: message.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*Msg_Prepare
	//	*Msg_PrepareVote
	//	*Msg_PreCommit
	//	*Msg_PreCommitVote
	//	*Msg_Commit
	//	*Msg_CommitVote
	//	*Msg_Decide
	//	*Msg_NewView
	//	*Msg_Request
	//	*Msg_Reply
	//	*Msg_PbValue
	//	*Msg_PbEcho
	//	*Msg_PbFinal
	Payload isMsg_Payload `protobuf_oneof:"Payload"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (m *Msg) GetPayload() isMsg_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Msg) GetPrepare() *Prepare {
	if x, ok := x.GetPayload().(*Msg_Prepare); ok {
		return x.Prepare
	}
	return nil
}

func (x *Msg) GetPrepareVote() *PrepareVote {
	if x, ok := x.GetPayload().(*Msg_PrepareVote); ok {
		return x.PrepareVote
	}
	return nil
}

func (x *Msg) GetPreCommit() *PreCommit {
	if x, ok := x.GetPayload().(*Msg_PreCommit); ok {
		return x.PreCommit
	}
	return nil
}

func (x *Msg) GetPreCommitVote() *PreCommitVote {
	if x, ok := x.GetPayload().(*Msg_PreCommitVote); ok {
		return x.PreCommitVote
	}
	return nil
}

func (x *Msg) GetCommit() *Commit {
	if x, ok := x.GetPayload().(*Msg_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *Msg) GetCommitVote() *CommitVote {
	if x, ok := x.GetPayload().(*Msg_CommitVote); ok {
		return x.CommitVote
	}
	return nil
}

func (x *Msg) GetDecide() *Decide {
	if x, ok := x.GetPayload().(*Msg_Decide); ok {
		return x.Decide
	}
	return nil
}

func (x *Msg) GetNewView() *NewView {
	if x, ok := x.GetPayload().(*Msg_NewView); ok {
		return x.NewView
	}
	return nil
}

func (x *Msg) GetRequest() *Request {
	if x, ok := x.GetPayload().(*Msg_Request); ok {
		return x.Request
	}
	return nil
}

func (x *Msg) GetReply() *Reply {
	if x, ok := x.GetPayload().(*Msg_Reply); ok {
		return x.Reply
	}
	return nil
}

func (x *Msg) GetPbValue() *PbValue {
	if x, ok := x.GetPayload().(*Msg_PbValue); ok {
		return x.PbValue
	}
	return nil
}

func (x *Msg) GetPbEcho() *PbEcho {
	if x, ok := x.GetPayload().(*Msg_PbEcho); ok {
		return x.PbEcho
	}
	return nil
}

func (x *Msg) GetPbFinal() *PbFinal {
	if x, ok := x.GetPayload().(*Msg_PbFinal); ok {
		return x.PbFinal
	}
	return nil
}

type isMsg_Payload interface {
	isMsg_Payload()
}

type Msg_Prepare struct {
	Prepare *Prepare `protobuf:"bytes,1,opt,name=prepare,proto3,oneof"`
}

type Msg_PrepareVote struct {
	PrepareVote *PrepareVote `protobuf:"bytes,2,opt,name=prepareVote,proto3,oneof"`
}

type Msg_PreCommit struct {
	PreCommit *PreCommit `protobuf:"bytes,3,opt,name=preCommit,proto3,oneof"`
}

type Msg_PreCommitVote struct {
	PreCommitVote *PreCommitVote `protobuf:"bytes,4,opt,name=preCommitVote,proto3,oneof"`
}

type Msg_Commit struct {
	Commit *Commit `protobuf:"bytes,5,opt,name=commit,proto3,oneof"`
}

type Msg_CommitVote struct {
	CommitVote *CommitVote `protobuf:"bytes,6,opt,name=commitVote,proto3,oneof"`
}

type Msg_Decide struct {
	Decide *Decide `protobuf:"bytes,7,opt,name=decide,proto3,oneof"`
}

type Msg_NewView struct {
	NewView *NewView `protobuf:"bytes,8,opt,name=newView,proto3,oneof"`
}

type Msg_Request struct {
	Request *Request `protobuf:"bytes,9,opt,name=request,proto3,oneof"`
}

type Msg_Reply struct {
	Reply *Reply `protobuf:"bytes,10,opt,name=reply,proto3,oneof"`
}

type Msg_PbValue struct {
	PbValue *PbValue `protobuf:"bytes,11,opt,name=pbValue,proto3,oneof"`
}

type Msg_PbEcho struct {
	PbEcho *PbEcho `protobuf:"bytes,12,opt,name=pbEcho,proto3,oneof"`
}

type Msg_PbFinal struct {
	PbFinal *PbFinal `protobuf:"bytes,13,opt,name=pbFinal,proto3,oneof"`
}

func (*Msg_Prepare) isMsg_Payload() {}

func (*Msg_PrepareVote) isMsg_Payload() {}

func (*Msg_PreCommit) isMsg_Payload() {}

func (*Msg_PreCommitVote) isMsg_Payload() {}

func (*Msg_Commit) isMsg_Payload() {}

func (*Msg_CommitVote) isMsg_Payload() {}

func (*Msg_Decide) isMsg_Payload() {}

func (*Msg_NewView) isMsg_Payload() {}

func (*Msg_Request) isMsg_Payload() {}

func (*Msg_Reply) isMsg_Payload() {}

func (*Msg_PbValue) isMsg_Payload() {}

func (*Msg_PbEcho) isMsg_Payload() {}

func (*Msg_PbFinal) isMsg_Payload() {}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

type Prepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurProposal *Block      `protobuf:"bytes,1,opt,name=curProposal,proto3" json:"curProposal,omitempty"`
	HighQC      *QuorumCert `protobuf:"bytes,2,opt,name=highQC,proto3" json:"highQC,omitempty"`
	ViewNum     uint64      `protobuf:"varint,3,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *Prepare) Reset() {
	*x = Prepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prepare) ProtoMessage() {}

func (x *Prepare) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prepare.ProtoReflect.Descriptor instead.
func (*Prepare) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *Prepare) GetCurProposal() *Block {
	if x != nil {
		return x.CurProposal
	}
	return nil
}

func (x *Prepare) GetHighQC() *QuorumCert {
	if x != nil {
		return x.HighQC
	}
	return nil
}

func (x *Prepare) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type PrepareVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash  []byte      `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Qc         *QuorumCert `protobuf:"bytes,2,opt,name=qc,proto3" json:"qc,omitempty"`
	PartialSig []byte      `protobuf:"bytes,3,opt,name=partialSig,proto3" json:"partialSig,omitempty"`
	ViewNum    uint64      `protobuf:"varint,4,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *PrepareVote) Reset() {
	*x = PrepareVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareVote) ProtoMessage() {}

func (x *PrepareVote) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareVote.ProtoReflect.Descriptor instead.
func (*PrepareVote) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *PrepareVote) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *PrepareVote) GetQc() *QuorumCert {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *PrepareVote) GetPartialSig() []byte {
	if x != nil {
		return x.PartialSig
	}
	return nil
}

func (x *PrepareVote) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type PreCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrepareQC *QuorumCert `protobuf:"bytes,1,opt,name=prepareQC,proto3" json:"prepareQC,omitempty"`
	ViewNum   uint64      `protobuf:"varint,2,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *PreCommit) Reset() {
	*x = PreCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreCommit) ProtoMessage() {}

func (x *PreCommit) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreCommit.ProtoReflect.Descriptor instead.
func (*PreCommit) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *PreCommit) GetPrepareQC() *QuorumCert {
	if x != nil {
		return x.PrepareQC
	}
	return nil
}

func (x *PreCommit) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type PreCommitVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash  []byte      `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Qc         *QuorumCert `protobuf:"bytes,2,opt,name=qc,proto3" json:"qc,omitempty"`
	PartialSig []byte      `protobuf:"bytes,3,opt,name=partialSig,proto3" json:"partialSig,omitempty"`
	ViewNum    uint64      `protobuf:"varint,4,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *PreCommitVote) Reset() {
	*x = PreCommitVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreCommitVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreCommitVote) ProtoMessage() {}

func (x *PreCommitVote) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreCommitVote.ProtoReflect.Descriptor instead.
func (*PreCommitVote) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *PreCommitVote) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *PreCommitVote) GetQc() *QuorumCert {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *PreCommitVote) GetPartialSig() []byte {
	if x != nil {
		return x.PartialSig
	}
	return nil
}

func (x *PreCommitVote) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type Commit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreCommitQC *QuorumCert `protobuf:"bytes,1,opt,name=preCommitQC,proto3" json:"preCommitQC,omitempty"`
	ViewNum     uint64      `protobuf:"varint,2,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *Commit) Reset() {
	*x = Commit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *Commit) GetPreCommitQC() *QuorumCert {
	if x != nil {
		return x.PreCommitQC
	}
	return nil
}

func (x *Commit) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type CommitVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash  []byte      `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Qc         *QuorumCert `protobuf:"bytes,2,opt,name=qc,proto3" json:"qc,omitempty"`
	PartialSig []byte      `protobuf:"bytes,3,opt,name=partialSig,proto3" json:"partialSig,omitempty"`
	ViewNum    uint64      `protobuf:"varint,4,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *CommitVote) Reset() {
	*x = CommitVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitVote) ProtoMessage() {}

func (x *CommitVote) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitVote.ProtoReflect.Descriptor instead.
func (*CommitVote) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *CommitVote) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *CommitVote) GetQc() *QuorumCert {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *CommitVote) GetPartialSig() []byte {
	if x != nil {
		return x.PartialSig
	}
	return nil
}

func (x *CommitVote) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type Decide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitQC *QuorumCert `protobuf:"bytes,1,opt,name=commitQC,proto3" json:"commitQC,omitempty"`
	ViewNum  uint64      `protobuf:"varint,2,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *Decide) Reset() {
	*x = Decide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Decide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decide) ProtoMessage() {}

func (x *Decide) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decide.ProtoReflect.Descriptor instead.
func (*Decide) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *Decide) GetCommitQC() *QuorumCert {
	if x != nil {
		return x.CommitQC
	}
	return nil
}

func (x *Decide) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type NewView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrepareQC *QuorumCert `protobuf:"bytes,1,opt,name=prepareQC,proto3" json:"prepareQC,omitempty"`
	ViewNum   uint64      `protobuf:"varint,2,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *NewView) Reset() {
	*x = NewView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewView) ProtoMessage() {}

func (x *NewView) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewView.ProtoReflect.Descriptor instead.
func (*NewView) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *NewView) GetPrepareQC() *QuorumCert {
	if x != nil {
		return x.PrepareQC
	}
	return nil
}

func (x *NewView) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd           string `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	ClientAddress string `protobuf:"bytes,2,opt,name=clientAddress,proto3" json:"clientAddress,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *Request) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *Request) GetClientAddress() string {
	if x != nil {
		return x.ClientAddress
	}
	return ""
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Command string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{11}
}

func (x *Reply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Reply) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type PbValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sid      uint64 `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Proposal []byte `protobuf:"bytes,3,opt,name=proposal,proto3" json:"proposal,omitempty"`
}

func (x *PbValue) Reset() {
	*x = PbValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbValue) ProtoMessage() {}

func (x *PbValue) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbValue.ProtoReflect.Descriptor instead.
func (*PbValue) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{12}
}

func (x *PbValue) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PbValue) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *PbValue) GetProposal() []byte {
	if x != nil {
		return x.Proposal
	}
	return nil
}

type PbEcho struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sid       uint64 `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Proposal  []byte `protobuf:"bytes,3,opt,name=proposal,proto3" json:"proposal,omitempty"`
	SignShare []byte `protobuf:"bytes,4,opt,name=signShare,proto3" json:"signShare,omitempty"`
}

func (x *PbEcho) Reset() {
	*x = PbEcho{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbEcho) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbEcho) ProtoMessage() {}

func (x *PbEcho) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbEcho.ProtoReflect.Descriptor instead.
func (*PbEcho) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{13}
}

func (x *PbEcho) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PbEcho) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *PbEcho) GetProposal() []byte {
	if x != nil {
		return x.Proposal
	}
	return nil
}

func (x *PbEcho) GetSignShare() []byte {
	if x != nil {
		return x.SignShare
	}
	return nil
}

type PbFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sid       uint64 `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Proposal  []byte `protobuf:"bytes,3,opt,name=proposal,proto3" json:"proposal,omitempty"`
	Signature []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *PbFinal) Reset() {
	*x = PbFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbFinal) ProtoMessage() {}

func (x *PbFinal) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbFinal.ProtoReflect.Descriptor instead.
func (*PbFinal) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{14}
}

func (x *PbFinal) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PbFinal) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *PbFinal) GetProposal() []byte {
	if x != nil {
		return x.Proposal
	}
	return nil
}

func (x *PbFinal) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea, 0x04, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x07,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x56, 0x6f, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x30, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56,
	0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x27, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x27,
	0x0a, 0x06, 0x64, 0x65, 0x63, 0x69, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x64, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x56, 0x69,
	0x65, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x62, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x62, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x07, 0x70, 0x62, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x62, 0x45, 0x63, 0x68, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x62, 0x45, 0x63, 0x68, 0x6f,
	0x48, 0x00, 0x52, 0x06, 0x70, 0x62, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x62,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x62, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x70,
	0x62, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x7e, 0x0a, 0x07, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x69, 0x67, 0x68, 0x51, 0x43, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75,
	0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x06, 0x68, 0x69, 0x67, 0x68, 0x51, 0x43,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x88, 0x01, 0x0a, 0x0b, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x02, 0x71, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x6f,
	0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x02, 0x71, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69,
	0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x56, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x51, 0x43, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75,
	0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x51, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x8a, 0x01,
	0x0a, 0x0d, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a,
	0x02, 0x71, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x02, 0x71, 0x63,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x57, 0x0a, 0x06, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x51, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x0b, 0x70, 0x72,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x51, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65,
	0x77, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77,
	0x4e, 0x75, 0x6d, 0x22, 0x87, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x21, 0x0a, 0x02, 0x71, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52,
	0x02, 0x71, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x53, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x51, 0x0a,
	0x06, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x51, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x51, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d,
	0x22, 0x54, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2f, 0x0a, 0x09, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x51, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72,
	0x74, 0x52, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x51, 0x43, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76,
	0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x41, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x39, 0x0a, 0x05, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x22, 0x47, 0x0a, 0x07, 0x50, 0x62, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x22, 0x64, 0x0a,
	0x06, 0x50, 0x62, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x22, 0x65, 0x0a, 0x07, 0x50, 0x62, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x32, 0x8c, 0x01, 0x0a, 0x0f, 0x48,
	0x6f, 0x74, 0x53, 0x74, 0x75, 0x66, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x73, 0x67,
	0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x27, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_message_proto_goTypes = []interface{}{
	(*Msg)(nil),           // 0: proto.Msg
	(*Empty)(nil),         // 1: proto.Empty
	(*Prepare)(nil),       // 2: proto.Prepare
	(*PrepareVote)(nil),   // 3: proto.PrepareVote
	(*PreCommit)(nil),     // 4: proto.PreCommit
	(*PreCommitVote)(nil), // 5: proto.PreCommitVote
	(*Commit)(nil),        // 6: proto.Commit
	(*CommitVote)(nil),    // 7: proto.CommitVote
	(*Decide)(nil),        // 8: proto.Decide
	(*NewView)(nil),       // 9: proto.NewView
	(*Request)(nil),       // 10: proto.Request
	(*Reply)(nil),         // 11: proto.Reply
	(*PbValue)(nil),       // 12: proto.PbValue
	(*PbEcho)(nil),        // 13: proto.PbEcho
	(*PbFinal)(nil),       // 14: proto.PbFinal
	(*Block)(nil),         // 15: proto.Block
	(*QuorumCert)(nil),    // 16: proto.QuorumCert
}
var file_message_proto_depIdxs = []int32{
	2,  // 0: proto.Msg.prepare:type_name -> proto.Prepare
	3,  // 1: proto.Msg.prepareVote:type_name -> proto.PrepareVote
	4,  // 2: proto.Msg.preCommit:type_name -> proto.PreCommit
	5,  // 3: proto.Msg.preCommitVote:type_name -> proto.PreCommitVote
	6,  // 4: proto.Msg.commit:type_name -> proto.Commit
	7,  // 5: proto.Msg.commitVote:type_name -> proto.CommitVote
	8,  // 6: proto.Msg.decide:type_name -> proto.Decide
	9,  // 7: proto.Msg.newView:type_name -> proto.NewView
	10, // 8: proto.Msg.request:type_name -> proto.Request
	11, // 9: proto.Msg.reply:type_name -> proto.Reply
	12, // 10: proto.Msg.pbValue:type_name -> proto.PbValue
	13, // 11: proto.Msg.pbEcho:type_name -> proto.PbEcho
	14, // 12: proto.Msg.pbFinal:type_name -> proto.PbFinal
	15, // 13: proto.Prepare.curProposal:type_name -> proto.Block
	16, // 14: proto.Prepare.highQC:type_name -> proto.QuorumCert
	16, // 15: proto.PrepareVote.qc:type_name -> proto.QuorumCert
	16, // 16: proto.PreCommit.prepareQC:type_name -> proto.QuorumCert
	16, // 17: proto.PreCommitVote.qc:type_name -> proto.QuorumCert
	16, // 18: proto.Commit.preCommitQC:type_name -> proto.QuorumCert
	16, // 19: proto.CommitVote.qc:type_name -> proto.QuorumCert
	16, // 20: proto.Decide.commitQC:type_name -> proto.QuorumCert
	16, // 21: proto.NewView.prepareQC:type_name -> proto.QuorumCert
	0,  // 22: proto.HotStuffService.SendMsg:input_type -> proto.Msg
	0,  // 23: proto.HotStuffService.SendRequest:input_type -> proto.Msg
	0,  // 24: proto.HotStuffService.SendReply:input_type -> proto.Msg
	1,  // 25: proto.HotStuffService.SendMsg:output_type -> proto.Empty
	1,  // 26: proto.HotStuffService.SendRequest:output_type -> proto.Empty
	1,  // 27: proto.HotStuffService.SendReply:output_type -> proto.Empty
	25, // [25:28] is the sub-list for method output_type
	22, // [22:25] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreCommitVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Commit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Decide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbEcho); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Msg_Prepare)(nil),
		(*Msg_PrepareVote)(nil),
		(*Msg_PreCommit)(nil),
		(*Msg_PreCommitVote)(nil),
		(*Msg_Commit)(nil),
		(*Msg_CommitVote)(nil),
		(*Msg_Decide)(nil),
		(*Msg_NewView)(nil),
		(*Msg_Request)(nil),
		(*Msg_Reply)(nil),
		(*Msg_PbValue)(nil),
		(*Msg_PbEcho)(nil),
		(*Msg_PbFinal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HotStuffServiceClient is the client API for HotStuffService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HotStuffServiceClient interface {
	SendMsg(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Empty, error)
	SendRequest(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Empty, error)
	SendReply(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Empty, error)
}

type hotStuffServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHotStuffServiceClient(cc grpc.ClientConnInterface) HotStuffServiceClient {
	return &hotStuffServiceClient{cc}
}

func (c *hotStuffServiceClient) SendMsg(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.HotStuffService/SendMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hotStuffServiceClient) SendRequest(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.HotStuffService/SendRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hotStuffServiceClient) SendReply(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.HotStuffService/SendReply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HotStuffServiceServer is the server API for HotStuffService service.
type HotStuffServiceServer interface {
	SendMsg(context.Context, *Msg) (*Empty, error)
	SendRequest(context.Context, *Msg) (*Empty, error)
	SendReply(context.Context, *Msg) (*Empty, error)
}

// UnimplementedHotStuffServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHotStuffServiceServer struct {
}

func (*UnimplementedHotStuffServiceServer) SendMsg(context.Context, *Msg) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMsg not implemented")
}
func (*UnimplementedHotStuffServiceServer) SendRequest(context.Context, *Msg) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendRequest not implemented")
}
func (*UnimplementedHotStuffServiceServer) SendReply(context.Context, *Msg) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendReply not implemented")
}

func RegisterHotStuffServiceServer(s *grpc.Server, srv HotStuffServiceServer) {
	s.RegisterService(&_HotStuffService_serviceDesc, srv)
}

func _HotStuffService_SendMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotStuffServiceServer).SendMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HotStuffService/SendMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotStuffServiceServer).SendMsg(ctx, req.(*Msg))
	}
	return interceptor(ctx, in, info, handler)
}

func _HotStuffService_SendRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotStuffServiceServer).SendRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HotStuffService/SendRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotStuffServiceServer).SendRequest(ctx, req.(*Msg))
	}
	return interceptor(ctx, in, info, handler)
}

func _HotStuffService_SendReply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotStuffServiceServer).SendReply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HotStuffService/SendReply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotStuffServiceServer).SendReply(ctx, req.(*Msg))
	}
	return interceptor(ctx, in, info, handler)
}

var _HotStuffService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.HotStuffService",
	HandlerType: (*HotStuffServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMsg",
			Handler:    _HotStuffService_SendMsg_Handler,
		},
		{
			MethodName: "SendRequest",
			Handler:    _HotStuffService_SendRequest_Handler,
		},
		{
			MethodName: "SendReply",
			Handler:    _HotStuffService_SendReply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
